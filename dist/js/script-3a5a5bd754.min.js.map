{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","handleInstallationStates","registration","installingWorker","installing","navigator","serviceWorker","controller","onstatechange","state","register","isServiceWorkerSupported","then","onupdatefound","isLocalhost","Boolean","window","location","hostname","match","protocol"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,aAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,KAAA,SAAAT,EAAAU,EAAAJ,eCWA,SAASK,GAA0BC,GAC/B,GAAMC,GAAmBD,EAAaE,UAClCC,WAAUC,cAAcC,aACxBJ,EAAiBK,cAAgB,WAC7B,OAAQL,EAAiBM,OACrB,IAAK,YAKD,KAEJ,KAAK,YACD,KAAM,IAAIhB,OAAM,sDASpC,QAASiB,KACDC,GACAN,UAAUC,cAAcI,SAAS,sBAChCE,KAAK,SAAAV,GAGFA,EAAaW,cAAgB,WACzBZ,EAAyBC,MAxCzC,GAAMY,GAAcC,QAChBC,OAAOC,SAASC,SAASC,MACrB,iFAKFR,EACF,iBAAmBN,aACW,WAA7BW,OAAOC,SAASG,UAAyBN,EAwC9Cd,GAAOJ,SACHc,WAAAA","file":"script-3a5a5bd754.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const isLocalhost = Boolean(\n    window.location.hostname.match( // localhost OR [::1] OR 127.0.0.1/8\n        /^localhost$|^\\[::1\\]$|^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n// Service workers are only supported over https (and localhost for dev)\nconst isServiceWorkerSupported =\n    'serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost);\n\nfunction handleInstallationStates (registration) {\n    const installingWorker = registration.installing;\n    if (navigator.serviceWorker.controller) {\n        installingWorker.onstatechange = () => {\n            switch (installingWorker.state) {\n                case 'installed':\n                    // At this point, the old content will have been purged and the\n                    // fresh content will have been added to the cache.\n                    // It's the perfect time to display a \"New content is\n                    // available; please refresh.\" message in the page's interface.\n                    break;\n\n                case 'redundant':\n                    throw new Error('The installing service worker became redundant.');\n\n                default:\n                    // Ignore\n            }\n        };\n    }\n}\n\nfunction register () {\n    if (isServiceWorkerSupported) {\n        navigator.serviceWorker.register('/service-worker.js')\n        .then(registration => {\n            // updatefound is fired if service-worker.js changes,\n            // or when the SW is first installed\n            registration.onupdatefound = () => {\n                handleInstallationStates(registration);\n            };\n        });\n        // .catch(e => {\n        //     logger.error('Error during service worker registration:', e)\n        // });\n    }\n}\n\nmodule.exports = {\n    register\n};\n"]}